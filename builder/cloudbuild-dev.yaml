steps:
#step 1: testing a code before making a build.
- name: 'node'
  entrypoint: 'npm'
  args: ['install']
- name: 'node'
  entrypoint: 'bash'
  args: [
    '-c',
    'db_username=${_DB_NAME} db_password=${_DB_PASSWORD} db_name=${_DB_NAME} port=${_DB_PORT} test_db_name=${_TEST_DB_NAME} npm test'
  ]
#step 2
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: [
   '-c',
   'docker pull gcr.io/$PROJECT_ID/demo-be-dep:$BRANCH_NAME-latest || exit 0'
  ]
#step 3
- name: gcr.io/cloud-builders/docker
  args: [
   'build',
   '-t',
   'gcr.io/$PROJECT_ID/demo-be-dep:$BRANCH_NAME-$COMMIT_SHA',
   '-t',
   'gcr.io/$PROJECT_ID/demo-be-dep:$BRANCH_NAME-latest',
   '.'
  ]
#step 4
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'k8s/dev/deployment.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
  - 'CLOUDSDK_CONTAINER_CLUSTER=demo-cluster'
  #step 5
- name: 'gcr.io/cloud-builders/kubectl'
  args: [
   'set',
   'image',
   'deployment',
   'demo-be-dep-dev',
   'demo-be-dep-dev=gcr.io/$PROJECT_ID/demo-be-dep:$BRANCH_NAME-$COMMIT_SHA',
    '--namespace',
    'demo-dev-ns'
  ]
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
  - 'CLOUDSDK_CONTAINER_CLUSTER=demo-cluster'
# push images to Google Container Registry with tags
images: [
   'gcr.io/$PROJECT_ID/demo-be-dep:$BRANCH_NAME-$COMMIT_SHA',
   'gcr.io/$PROJECT_ID/demo-be-dep:$BRANCH_NAME-latest'
  ]
